[
  {
    "href": "index.html",
    "title": "tidymodels Gallery",
    "section": "",
    "text": "Welcome!\nThis “book” is meant to contain patterns or “recipes” of various tidymodels tasks."
  },
  {
    "href": "chapter/visualize-decision-trees.html#classification-tree",
    "title": "1  Visualize Decision Trees",
    "section": "1.1 Classification Tree",
    "text": "library(tidymodels)\nlibrary(palmerpenguins)\nlibrary(rpart.plot)\n\nclass_tree_spec <- decision_tree() %>%\n  set_mode(\"classification\") %>%\n  set_engine(\"rpart\")\n\nrec_spec <- recipe(species ~ ., data = penguins)\n\nclass_tree_wf <- workflow() %>%\n  add_recipe(rec_spec) %>%\n  add_model(class_tree_spec)\n\nclass_tree_fit <- class_tree_wf %>%\n  fit(penguins)\n\nclass_tree_fit %>%\n  extract_fit_engine() %>%\n  rpart.plot(roundint = FALSE)"
  },
  {
    "href": "chapter/visualize-decision-trees.html#regression-tree",
    "title": "1  Visualize Decision Trees",
    "section": "1.2 Regression Tree",
    "text": "library(tidymodels)\nlibrary(palmerpenguins)\nlibrary(rpart.plot)\n\nreg_tree_spec <- decision_tree() %>%\n  set_mode(\"regression\") %>%\n  set_engine(\"rpart\")\n\nrec_spec <- recipe(body_mass_g ~ ., data = penguins)\n\nreg_tree_wf <- workflow() %>%\n  add_recipe(rec_spec) %>%\n  add_model(reg_tree_spec)\n\nreg_tree_fit <- reg_tree_wf %>%\n  fit(penguins)\n\nreg_tree_fit %>%\n  extract_fit_engine() %>%\n  rpart.plot(roundint = FALSE)"
  },
  {
    "href": "chapter/dealing-with-datetime.html",
    "title": "2  Dealing with datetime columns",
    "section": "",
    "text": "library(recipes)\n\nLoading required package: dplyr\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\n\nAttaching package: 'recipes'\n\n\nThe following object is masked from 'package:stats':\n\n    step\n\nlibrary(modeldata)\n\ndata(\"Chicago\")\n\nThis is what you get if you don’t do anything to the date column.\n\nrecipe(ridership ~ date, data = Chicago) %>%\n  prep() %>%\n  bake(new_data = NULL)\n\n# A tibble: 5,698 × 2\n   date       ridership\n   <date>         <dbl>\n 1 2001-01-22     15.7 \n 2 2001-01-23     15.8 \n 3 2001-01-24     15.9 \n 4 2001-01-25     15.9 \n 5 2001-01-26     15.4 \n 6 2001-01-27      2.42\n 7 2001-01-28      1.47\n 8 2001-01-29     15.5 \n 9 2001-01-30     15.9 \n10 2001-01-31     15.9 \n# … with 5,688 more rows\n\n\nstep_date() turns the a date column into 3 columns by default. Day of week \"dow\", month \"month\", and year \"year\". step_data() keeps original columns by default, but can be removed by setting keep_original_cols = FALSE\n\nrecipe(ridership ~ date, data = Chicago) %>%\n  step_date(date, keep_original_cols = FALSE) %>%\n  prep() %>%\n  bake(new_data = NULL)\n\n# A tibble: 5,698 × 4\n   ridership date_dow date_month date_year\n       <dbl> <fct>    <fct>          <dbl>\n 1     15.7  Mon      Jan             2001\n 2     15.8  Tue      Jan             2001\n 3     15.9  Wed      Jan             2001\n 4     15.9  Thu      Jan             2001\n 5     15.4  Fri      Jan             2001\n 6      2.42 Sat      Jan             2001\n 7      1.47 Sun      Jan             2001\n 8     15.5  Mon      Jan             2001\n 9     15.9  Tue      Jan             2001\n10     15.9  Wed      Jan             2001\n# … with 5,688 more rows\n\n\nyou can specify step_date() to only return some features by using the features argument.\n\nrecipe(ridership ~ date, data = Chicago) %>%\n  step_date(date, features = \"dow\", keep_original_cols = FALSE) %>%\n  prep() %>%\n  bake(new_data = NULL)\n\n# A tibble: 5,698 × 2\n   ridership date_dow\n       <dbl> <fct>   \n 1     15.7  Mon     \n 2     15.8  Tue     \n 3     15.9  Wed     \n 4     15.9  Thu     \n 5     15.4  Fri     \n 6      2.42 Sat     \n 7      1.47 Sun     \n 8     15.5  Mon     \n 9     15.9  Tue     \n10     15.9  Wed     \n# … with 5,688 more rows\n\n\nyou can also get label = FALSE to have the features returned as numeric instead of factors.\n\nrecipe(ridership ~ date, data = Chicago) %>%\n  step_date(date, label = FALSE, keep_original_cols = FALSE) %>%\n  prep() %>%\n  bake(new_data = NULL)\n\n# A tibble: 5,698 × 4\n   ridership date_dow date_month date_year\n       <dbl>    <dbl>      <dbl>     <dbl>\n 1     15.7         2          1      2001\n 2     15.8         3          1      2001\n 3     15.9         4          1      2001\n 4     15.9         5          1      2001\n 5     15.4         6          1      2001\n 6      2.42        7          1      2001\n 7      1.47        1          1      2001\n 8     15.5         2          1      2001\n 9     15.9         3          1      2001\n10     15.9         4          1      2001\n# … with 5,688 more rows"
  }
]